name: Update Changelog

on:
  pull_request:
    types: [opened, synchronize, labeled]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-changelog:
    name: Check changelog update
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.pull_request.labels.*.name, 'skip-changelog') &&
      !contains(github.event.pull_request.labels.*.name, 'dependencies')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if changeset or CHANGELOG.md was modified
        id: check
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)

          # Check for either changeset files or CHANGELOG.md
          if echo "$CHANGED_FILES" | grep -qE "(\.changeset/.*\.md|CHANGELOG\.md)"; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Changeset or CHANGELOG.md has been updated"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "⚠️ No changeset or CHANGELOG.md update found"
          fi

      - name: Comment on PR if changelog missing
        if: steps.check.outputs.changed == 'false'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = "## ⚠️ Changeset Required\n\n" +
              "This PR does not include a changeset file.\n\n" +
              "Please create a changeset to document your changes.\n\n" +
              "### How to create a changeset:\n\n" +
              "1. Run `pnpm changeset` in the project root\n" +
              "2. Select the type of change:\n" +
              "   - **patch** - Bug fixes and minor changes\n" +
              "   - **minor** - New features (backwards compatible)\n" +
              "   - **major** - Breaking changes\n" +
              "3. Write a description of your changes\n" +
              "4. Commit the generated `.changeset/*.md` file\n\n" +
              "### Example:\n\n" +
              "```bash\n" +
              "pnpm changeset\n" +
              "# Select: patch\n" +
              "# Description: Fix bug in parser\n" +
              "git add .changeset\n" +
              "git commit -m \"chore: add changeset\"\n" +
              "```\n\n" +
              "---\n\n" +
              "If this PR doesn't require a changeset, add the `skip-changelog` label."

            // Check if comment already exists
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Changeset Required')
            )

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment,
              })
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment,
              })
            }

      - name: Add label if changelog updated
        if: steps.check.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['changelog-updated'],
            })
